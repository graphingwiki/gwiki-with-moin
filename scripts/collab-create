#!/bin/sh
# -*- coding: utf-8 -*-

##  @copyright: 2007-2012 Marko Laakso in adm (at) clarifiednetworks.com role
##  @copyright: 2006 Marko Laakso in adm (at) ee.oulu.fi role
##  @copyright: 2005 Jani Kenttala in adm (at) ee.oulu.fi role
##  @license: MIT <http://www.opensource.org/licenses/mit-license.php>

error() {
  echo "$@" 1>&2
  exit 1
}

[ `id -u` -eq 0 ] && error "Cannot run as root"

CFG=/etc/local/collab/collab.ini

if [ -f ${CFG} ]; then
  . ${CFG} 2> /dev/null
else
  error "No ${CFG}"
fi

if [ "blah$1" = "blah-f" ]; then
  FACILITATED=yes
  shift
fi

if [ $# -lt 2 -o $# -gt 3 ]; then

  echo "Usage: $0 [-f(acilitated)] <user> <wikiname> [theme]" 1>&2
  exit 1
fi

set -e

umask 007

MYUSER=$1
shift
WIKINAME=$1
shift

if [ $# -gt 0 ]; then
  MYTHEME=$1
  shift
fi

if [ "${MOIN_PREFIX+set}" != "set" ]; then
  if [ -d /usr/share/moin ]; then
    MOIN_PREFIX=/usr
  elif  [ -d /usr/local/share/moin ]; then
    MOIN_PREFIX=/usr/local
  else
    cat <<EOF 1>&2
Can't find /usr/share/moin or /usr/local/share/moin.
Please set MOIN_PREFIX or install MoinMoin in the standard location.
EOF
   exit 1
  fi
fi

SHARE=${MOIN_PREFIX}/share/moin

myname=`basename $0`

if [ ${WIKINAME} = collab ]; then
    DEST=${htmldir}
else
    DEST=${htmldir}/${WIKINAME}
    [ -d ${DEST} ] && error "${myname}: ${DEST} already exists, aborting.."
    mkdir -p ${DEST}
fi
DATA=${wikidir}/${WIKINAME}
FARMCONFIGDIR=`dirname ${farmconf}`
MYTEMPLATE=${DATA}/collab-htaccess-template

[ -d ${DATA} ] && error "${myname}: ${DATA} already exists, aborting.."
mkdir -p ${DATA}/config

cat <<EOF >> ${DEST}/wsgi
import collabbackend

myinfra = collabbackend.CollabBackend()
mycollab = collabbackend.Collab(myinfra, collabbackend.pathbasename(__file__))

application = collabbackend.wsgiapplication
EOF

cat <<EOF >> ${MYTEMPLATE}
## Templated - edit template

RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ wsgi/\$1 [QSA,PT,L]

<Files wsgi>
  SetHandler wsgi-script
</Files>

EOF

if [ ! -f ${farmconf} ]; then
  error "Required ${farmconf} missing ..."
fi

cat > ${DATA}/config/${WIKINAME}.py <<EOF
import sys
sys.path.insert(0, '${FARMCONFIGDIR}')
from collabfarm import FarmConfig

class Config(FarmConfig):
    sitename = u'${WIKINAME} Collab'
    interwikiname = '${WIKINAME}'
    data_dir = '${DATA}/data'
EOF

cat <<EOF > ${DATA}/config/farmconfig.py
wikis = [
    ("${WIKINAME}", r".*")
]
EOF

if [ "${MYTHEME}blah" != "blah" ]; then
  cat >> ${DATA}/config/${WIKINAME}.py <<EOF
    theme_default = '${MYTHEME}'
EOF
fi

cp -r ${MOIN_PREFIX}/share/moin/data ${DATA}/
chmod -R g=u ${DATA}/data
find ${DATA}/data -type d -exec chmod g+s {} \;

if [ "blah${FACILITATED}" = "blahyes" ]; then
  cat <<EOF | gwiki-editpage -a ${DATA} FacilitatorGroup
#acl FacilitatorGroup:admin,revert,read,write,invite All:read

This is a group page. It is used for access control.

## ${helperuser} is internal for automata
 * [[${helperuser}]]
 * [[${MYUSER}]]
EOF

  cat <<EOF | gwiki-editpage -a ${DATA} AccessGroup
#acl FacilitatorGroup:admin,revert,read,write,invite All:none

Users who can access this wiki.

 * [[${MYUSER}]]
EOF

else
  printf "Users who can access this wiki.\n\n * [[${MYUSER}]]\n" | \
    gwiki-editpage -a ${DATA} AccessGroup
fi

gwiki-rehash ${DATA}
