# Full installation instructions for graphingwiki on collabbackend.
# The script is assumed to be run as root.  These instructions have
# been tested on Ubuntu 12.04 and 10.04, and may actually miss some of
# the major errors. There are minor differences when installing on
# Ubuntu 14.04, they are marked in comments. The instructions assume
# you are using the bash shell.

## Install apache, graphingwiki, igraph
apt-get install libapache2-mod-wsgi apache2 apache2-mpm-worker ssl-cert
a2enmod wsgi
a2enmod ssl
a2enmod rewrite

# Configure Apache. When running more than one virtual host, it is
# advised to use directory names such as /srv/www/https/name and
# /srv/www/log/https/name
umask 022
mkdir -p /srv/www/log/https/
mkdir -p /srv/www/https/
chown www-data:www-data /srv/www/log/https/ /srv/www/https/

# Simple config including only the wiki. Do not run if you are already
# serving something else. This is only meant to be a barebone example
# so that you know what is strictly needed.
cat <<EOF > /etc/apache2/sites-available/000-default.conf
<IfModule !mod_ssl.c>
LoadModule ssl_module modules/mod_ssl.so
</IfModule>
Listen 443
<VirtualHost _default_:443>
DocumentRoot "/srv/www/https/"
ErrorLog /srv/www/log/https/error_log
CustomLog /srv/www/log/https/access_log combined
LogLevel warn
SSLEngine on
SSLProtocol all -SSLv2 -SSLv3
SSLHonorCipherOrder on
SSLCipherSuite "HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK"
SSLCompression off
SSLInsecureRenegotiation off
SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem
SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>
SetEnvIf User-Agent ".*MSIE.*" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0
</VirtualHost>                                  
EOF

# In Ubuntu 14.04 the directory below has changed to
# /etc/apache2/conf-enabled/collab.conf
cat <<EOF > /etc/apache2/conf.d/collab.conf
<Directory "/srv/www/https/collab">
  Options +ExecCGI
  AllowOverride All
</Directory>
EOF

cat <<EOF > /etc/apache2/ports.conf
EOF

a2ensite 000-default.conf

# If you use Apache 2.4 (as in Ubuntu 14.04), you should add the
# following to collab.conf:
# <Directory "/srv/www/https/moin_static">
#  require all granted
# </Directory>

# You may want to change the SSL certificates to ones signed by a CA
# you use.

## Also change the line that defines ErrorLog in
## /etc/apache2/apache2.conf to the following:
## ErrorLog /srv/www/log/https/error_log

## Install graphviz. 
apt-get install libgv-python graphviz

# You can tell if the packages have been broken by trying out the
# command python -c "import gv" if that gives errors, the package has
# is broken.
#
# If the current packages in Ubuntu repos are broken or outdated, you
# can do either of two things. 
# 1.) Fix per instructions in
# https://bugs.launchpad.net/ubuntu/+source/graphviz/+bug/556874
# 2.) Use the precompiled packages from ATT
# (http://www.graphviz.org/Download_linux_ubuntu.php) 

## OPTIONAL: Install igraph, if you want to layout large graphs
# https://launchpad.net/~igraph/+archive/ppa
# With Ubuntu 14.04 the required package is software-properties-common
apt-get install python-software-properties
add-apt-repository ppa:igraph/ppa
apt-get update
apt-get install python-igraph

## Get moin, gwiki sources. Install.
mkdir -p /usr/local/src/
cd /usr/local/src/
wget -N -q https://github.com/graphingwiki/graphingwiki/archive/\
master.tar.gz -O graphingwiki.tar.gz
wget -N -q https://github.com/graphingwiki/opencollab/archive/\
master.tar.gz -O opencollab.tar.gz
wget -N -q https://github.com/graphingwiki/collabbackend/archive/\
master.tar.gz -O collabbackend.tar.gz
wget -N -q http://static.moinmo.in/files/moin-1.9.8.tar.gz
mkdir graphingwiki
tar -zxvf graphingwiki.tar.gz -C graphingwiki/ --strip-components 1
mkdir opencollab
tar -zxvf opencollab.tar.gz -C opencollab/ --strip-components 1
mkdir collabbackend
tar -zxvf collabbackend.tar.gz -C collabbackend/ --strip-components 1

# Patch and install moin
tar -zxvf moin-1.9.8.tar.gz 
cd moin-1.9.8/
ls /usr/local/src/graphingwiki/patch.d/* | \
xargs -I {} sh -c 'patch -p0 -N -t < {}'
ls /usr/local/src/collabbackend/patch.d/* | \
xargs -I {} sh -c 'patch -p0 -N -t < {}'
python setup.py install

# Install graphingwiki, collabbackend and opencollab
cd ../graphingwiki/graphingwiki
python setup.py install
cd ../collabbackend/
python setup.py install
cd ../opencollab/
python setup.py install

## Start bootstrapping collabbackend
# Make user collab
mkdir /var/empty
chown root:root /var/empty
chmod 755 /var/empty
useradd -u 812 -s /sbin/nologin -d /var/empty -c 'Service Collab' collab
usermod -a -G collab www-data
# Moin setup might have left the permissions lacking, so explicitly allowing
chgrp -R collab /usr/local/share/moin/

# Make the necessary directories
mkdir -p /etc/local/collab
mkdir -p /srv/wikis/collab
cd /srv/wikis
mkdir -p collab/archive collab/cache collab/config collab/docbook \
collab/htdocs collab/log collab/underlay collab/user collab/wikis collab/run
# Copy files into their places
cp /usr/local/src/graphingwiki/collab/config/collab.ini /etc/local/collab/
cp /usr/local/src/graphingwiki/collab/config/collabfarm.py \
/srv/wikis/collab/config
cp /usr/local/src/graphingwiki/collab/config/intermap.txt \
/srv/wikis/collab/config
cp /usr/local/src/graphingwiki/collab/config/logging.conf \
/srv/wikis/collab/config
chown -R collab:collab collab
chmod -R 2770 collab/

# You should look into the collabfarm.py to add any configs you might
# need, especially the config for sending email.

# Ensure that Apache can write to the Moin log file
touch collab/log/moinmoin.log
chmod 660 collab/log/moinmoin.log

# Make links to htdocs, collab from document root
ln -sf /srv/wikis/collab/htdocs/ /srv/www/https/collab
ln -sf /usr/local/share/moin/htdocs/ /srv/www/https/moin_static

# Ensure that Moin 1.9.8 htdocs are copied to the expected place
# instead of libs. This was a 1.9 change.
PYVERSION=`python -c 'import sys; print sys.version_info[1]'`
cp -r \
/usr/local/lib/python2.${PYVERSION}/dist-packages/MoinMoin/web/static/htdocs/* \
/usr/local/share/moin/htdocs/

# Copy moin underlay to collabfarm
su - collab -s /bin/bash -c "umask 007; cp -r /usr/local/share/moin/underlay \
/srv/wikis/collab/; chmod -R g+w /srv/wikis/collab/underlay"

# Make the base collab
su - collab -s /bin/bash -c "collab-create collab collab"
su - collab -s /bin/bash -c "collab-account-create -f -r collab"
su - collab -s /bin/bash -c "collab-htaccess"

# Making htaccess to the base collab

# If you use Apache 2.4 (as in Ubuntu 14.04), omit the AuthGroupFile
# and add the line
# DirectoryIndex wsgi
cat <<EOF > /srv/wikis/collab/htdocs/.htaccess
RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^(.*)$ wsgi/\$1 [QSA,PT,L]

<Files wsgi>
  SetHandler wsgi-script
</Files>

AuthType        Basic
AuthName        "Password Required (cancel for help)"
AuthUserFile    /srv/wikis/collab/run/.htpasswd
AuthGroupFile   /srv/wikis/collab/run/.htgroup

Require valid-user
EOF

## OPTIONAL: Install geo ip for use with MetaMap et al
# Other OS versions might need to use the versions from MaxMind:
# http://www.maxmind.com/app/installation

cd /etc/local/collab
wget -N -q http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
gzip -c -d GeoLiteCity.dat.gz > /etc/local/collab/GeoLiteCity.dat

apt-get install python-geoip

## Install underlay to wiki
# Navigate as wiki superuser (collab by default) to page
# LanguageSetup. Click "install help and system page packages" under
# "Installing page packages". Select the desired selection of
# underlay pages. (Default to all_pages if unsure.)

# Note that if you want to use the Invite action, you will need pages
# for InviteNewTemplate and InviteOldTemplate in your underlay
# (/srv/wikis/collab/underlay).

# You can also install underlays by package install script, like
# this. Do not care about any error messages that might follow these
# commands.

PYTHONPATH=/srv/wikis/collab/wikis/collab/config/ python -m MoinMoin.packages \
i /usr/local/src/moin-1.9.8/wiki/underlay/pages/LanguageSetup/\
attachments/English--all_pages.zip 

PYTHONPATH=/srv/wikis/collab/wikis/collab/config/ python -m MoinMoin.packages \
i /usr/local/src/graphingwiki/collab/packages/CollabBase.zip 

# Rehash the base collab to complete installation of underlay. It
# might also be needed to restart Apache.

su - collab -s /bin/bash -c "gwiki-rehash /srv/wikis/collab/wikis/collab"
/etc/init.d/apache2 restart

# Most commands require running collab-htaccess after them - you might
# want to running it in your cron. In that case, your crontab for
# collab should look something like this: 
# # crontab -l -u collab 
# * * * * * /usr/local/bin/collab-htaccess

# One way to do this is the following:
echo "* * * * * /usr/local/bin/collab-htaccess" | crontab -u collab -

## Wiki Management

# After the initial install, collabs are created like this
su - collab -s /bin/bash -c "collab-create collab mointests"
su - collab -s /bin/bash -c "collab-htaccess"
# This will create a collab under the URL:
# https://localhost/collab/mointests/

# Please note that you generally should not make collabs with the same
# name as existing Python libraries, as this will in many cases cause
# problems with collab management. MoinMoin tries to import
# configurations in most actions, and having libraries with the same
# names earlier on in PYTHONPATH will cause nasty crashes.

# You can manage users from the command line, or from the wiki. In
# either case, running collab-htaccess is needed. Users are added like
# this with command line scripts:
su - collab -s /bin/bash -c "collab-account-create someuser@example.com"
su - collab -s /bin/bash -c "collab-htaccess"

# Give users access to wikis by first adding them to the AccessGroup
# page of the wiki, and then issuing collab-htaccess.
su - collab -s /bin/bash -c "collab-group-edit -a mointests AccessGroup\
 someuser@example.com"
su - collab -s /bin/bash -c "collab-htaccess"

# User passwords are changed with collab-account-password, after which
# you need to run collab-htaccess.
su - collab -s /bin/bash -c "collab-account-password someuser@example.com"
su - collab -s /bin/bash -c "collab-htaccess"
